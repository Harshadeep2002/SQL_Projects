CREATE DATABASE SISDB
USE SISDB

--2) DDL (CREATE TABLES)

CREATE TABLE STUDENTS
(
STUDENT_ID INT PRIMARY KEY,
FIRST_NAME VARCHAR(50) NOT NULL,
LAST_NAME VARCHAR(50) NOT NULL,
DOB DATE,
EMAIL VARCHAR(50) NOT NULL,
PHONE VARCHAR(10) UNIQUE NOT NULL,
);

CREATE TABLE COURSES
(
COURSE_ID INT PRIMARY KEY,
COURSE_NAME VARCHAR(50),
CREDITS INT,
TEACHER_ID INT,
FOREIGN KEY(TEACHER_ID) REFERENCES TEACHERS(TEACHER_ID)
);

CREATE TABLE ENROLLMENTS
(
ENROLLMENT_ID INT PRIMARY KEY,
STUDENT_ID INT NOT NULL,
COURSE_ID INT NOT NULL,
ENROLLMENT_DATE DATE,
FOREIGN KEY(STUDENT_ID)REFERENCES STUDENTS(STUDENT_ID) ON DELETE CASCADE,
FOREIGN KEY(COURSE_ID) REFERENCES COURSES(COURSE_ID) ON DELETE CASCADE
);

CREATE TABLE  TEACHERS
(
TEACHER_ID INT PRIMARY KEY,
FIRST_NAME VARCHAR(50) NOT NULL,
LAST_NAME VARCHAR(50) NOT NULL,
EMAIL VARCHAR(50)
);

CREATE TABLE PAYMENTS
( 
PAYMENT_ID INT PRIMARY KEY,
STUDENT_ID INT NOT NULL,
AMOUNT DECIMAL(10,2),
PAYMENT_DATE DATE
FOREIGN KEY(STUDENT_ID) REFERENCES STUDENTS(STUDENT_ID) ON DELETE CASCADE
);

---3A) DML (INSERTING RECORDS)

INSERT INTO STUDENTS VALUES(1,'HARSHA','DEEP','2002-03-15','harsha@gmail.com','9885712780')
INSERT INTO STUDENTS VALUES(2,'SHYAM','P','2002-05-13','shyam@gmail.com','9881234567')
INSERT INTO STUDENTS VALUES(3,'MAHI','M','2002-10-30','mahi@gmail.com','1237894563')
INSERT INTO STUDENTS VALUES(4,'DHEERAJ','P','2003-08-16','dheeraj@gmail.com','6300512478')
INSERT INTO STUDENTS VALUES(5,'GEETA','RANI','1995-03-15','geeta@gmail.com','9154789320')
INSERT INTO STUDENTS VALUES(6,'RAMESH','KUMAR','1997-03-15','ramesh@gmail.com','789562090')
INSERT INTO STUDENTS VALUES(7,'SRIHI','M','2004-10-10','srihi@gmail.com','7895214787')
INSERT INTO STUDENTS VALUES(8,'MOUNI','G','1995-03-25','mouni@gmail.com','7812061090')
INSERT INTO STUDENTS VALUES(9,'SAM','SUHAS','2005-08-19','sam@gmail.com','9999944445')
INSERT INTO STUDENTS VALUES(10,'JOSHYA','KEERTANA','2012-03-15','joshya@gmail.com','9887802090')
INSERT INTO STUDENTS VALUES(12,'SARATH','KUMAR','2002-05-09','sarath@gmail.com','9963054125')

SELECT * FROM STUDENTS

INSERT INTO TEACHERS VALUES(201,'SUBASH','SHARMA','subash@gmail.com')
INSERT INTO TEACHERS VALUES(202,'NISHANTH','KUMAR','nishanth@gmail.com')
INSERT INTO TEACHERS VALUES(203,'NIKKI','VARMA','nikki@gmail.com')
INSERT INTO TEACHERS VALUES(204,'MADHU','MENON','madhu@gmail.com')
INSERT INTO TEACHERS VALUES(205,'SUSHMA','SENA','sushma@gmail.com')
INSERT INTO TEACHERS VALUES(206,'SHAMEEM','AFROZE','shameem@gmail.com')
INSERT INTO TEACHERS VALUES(207,'SHUKLA','KAPOOR','shukla@gmail.com')
INSERT INTO TEACHERS VALUES(208,'RATNESH','KUMAR','ratnesh@gmail.com')
INSERT INTO TEACHERS VALUES(209,'PRANAY','PILLAI','pranay@gmail.com')
INSERT INTO TEACHERS VALUES(210,'SURAJ','KUMAR','suraj@gmail.com')
SELECT * FROM TEACHERS

INSERT INTO COURSES VALUES(301,'PYTHON',5,201)
INSERT INTO COURSES VALUES(302,'JAVA',6,202)
INSERT INTO COURSES VALUES(303,'C#',8,210)
INSERT INTO COURSES VALUES(304,'CLOUD',4,205)
INSERT INTO COURSES VALUES(305,'CYBER',5,205)
INSERT INTO COURSES VALUES(306,'ANALYST',10,204)
INSERT INTO COURSES VALUES(307,'DATA SCIENCE',9,204)
INSERT INTO COURSES VALUES(308,'MY SQL',3,203)
INSERT INTO COURSES VALUES(309,'MS SQL',3,203)
INSERT INTO COURSES VALUES(310,'ORACLE SQL',3,203)
INSERT INTO COURSES VALUES(311,'IT',6,206)
INSERT INTO COURSES VALUES(312,'INFRASTRIUCTURE',5,206)
INSERT INTO COURSES VALUES(313,'TESTING',6,209)
INSERT INTO COURSES VALUES(314,'DEVOPS',10,207)
INSERT INTO COURSES VALUES(315,'AI',10,201)
INSERT INTO COURSES VALUES(316,'WEB DEV',6,202)
INSERT INTO COURSES VALUES(317,'MANAGEMENT',5,210)
INSERT INTO COURSES VALUES(318,'BLOCK CHAIN',5,205)
INSERT INTO COURSES VALUES(319,'AI',8,201)
INSERT INTO COURSES VALUES(320,'IOT',5,208)
SELECT * FROM COURSES

INSERT INTO ENROLLMENTS VALUES (401, 1,301, '2023-03-15')
INSERT INTO ENROLLMENTS VALUES (402, 2,308, '2022-04-15')
INSERT INTO ENROLLMENTS VALUES (403, 3,309, '2022-02-15')
INSERT INTO ENROLLMENTS VALUES (404, 4,310, '2023-09-15')
INSERT INTO ENROLLMENTS VALUES (405, 5,305, '2021-02-15')
INSERT INTO ENROLLMENTS VALUES (406, 6,303, '2022-06-15')
INSERT INTO ENROLLMENTS VALUES (407, 7,304, '2021-02-15')
INSERT INTO ENROLLMENTS VALUES (408, 8,306, '2021-08-15')
INSERT INTO ENROLLMENTS VALUES (409, 9,302, '2021-05-15')
INSERT INTO ENROLLMENTS VALUES (410, 10,307, '2022-03-15')
INSERT INTO ENROLLMENTS VALUES (411, 4,320, '2022-08-15')
INSERT INTO ENROLLMENTS VALUES (412, 1,314, '2023-03-15')
INSERT INTO ENROLLMENTS VALUES (413, 7,312, '2023-11-15')
INSERT INTO ENROLLMENTS VALUES (415, 1,303, '2023-11-22')
INSERT INTO ENROLLMENTS VALUES (416, 1,302, '2023-11-22')
INSERT INTO ENROLLMENTS VALUES (417, 1,304, '2023-11-22')
INSERT INTO ENROLLMENTS VALUES (418, 1,305, '2023-11-22')
INSERT INTO ENROLLMENTS VALUES (419, 1,306, '2023-11-22')
INSERT INTO ENROLLMENTS VALUES (420, 1,307, '2023-11-22')
INSERT INTO ENROLLMENTS VALUES (421, 1,308, '2023-11-22')
INSERT INTO ENROLLMENTS VALUES (422, 1,309, '2023-11-22')
INSERT INTO ENROLLMENTS VALUES (423, 1,310, '2023-11-22')
INSERT INTO ENROLLMENTS VALUES (424, 1,311, '2023-11-22')
INSERT INTO ENROLLMENTS VALUES (425, 1,312, '2023-11-22')
INSERT INTO ENROLLMENTS VALUES (426, 1,313, '2023-11-22')
INSERT INTO ENROLLMENTS VALUES (427, 1,315, '2023-11-22')
INSERT INTO ENROLLMENTS VALUES (428, 1,316, '2023-11-22')
INSERT INTO ENROLLMENTS VALUES (429, 1,317, '2023-11-22')
INSERT INTO ENROLLMENTS VALUES (430, 1,318, '2023-11-22')
INSERT INTO ENROLLMENTS VALUES (431, 1,319, '2023-11-22')
INSERT INTO ENROLLMENTS VALUES (432, 1,320, '2023-11-22')
INSERT INTO ENROLLMENTS VALUES (433, 1,302, '2023-11-22')
INSERT INTO ENROLLMENTS VALUES (434, 1,303, '2023-11-22')
INSERT INTO ENROLLMENTS VALUES (435, 1,314, '2023-11-22')

SELECT * FROM ENROLLMENTS

INSERT INTO PAYMENTS VALUES(111,1,1000,'2023-03-20')
INSERT INTO PAYMENTS VALUES(112,2,5000,'2022-04-20')
INSERT INTO PAYMENTS VALUES(113,3,6000,'2022-02-20')
INSERT INTO PAYMENTS VALUES(114,4,2000,'2023-09-20')
INSERT INTO PAYMENTS VALUES(115,5,3000,'2021-02-20')
INSERT INTO PAYMENTS VALUES(116,6,9000,'2021-06-20')
INSERT INTO PAYMENTS VALUES(117,7,2000,'2021-02-20')
INSERT INTO PAYMENTS VALUES(118,8,8000,'2022-08-20')
INSERT INTO PAYMENTS VALUES(119,9,7000,'2023-05-20')
INSERT INTO PAYMENTS VALUES(120,10,9000,'2023-11-20')
INSERT INTO PAYMENTS VALUES(121,1,7000,'2023-10-20')

SELECT * FROM PAYMENTS

---3B) 

---1
INSERT INTO STUDENTS VALUES(11,'JOHN','DOE','1995-08-15','john.doe@example.com',1234567890)

--2
INSERT INTO ENROLLMENTS VALUES(414,11,316,'2023-12-1')

---3
UPDATE TEACHERS
SET EMAIL = 'kumar@gmail.com'
WHERE TEACHER_ID = 210;

---4
DELETE FROM ENROLLMENTS
WHERE STUDENT_ID = 1 AND COURSE_ID = 314;

--5
UPDATE COURSES
SET TEACHER_ID = 201
WHERE COURSE_NAME = 'IOT'

--6

SELECT S.STUDENT_ID,E.ENROLLMENT_ID FROM STUDENTS AS S
JOIN ENROLLMENTS AS E ON S.STUDENT_ID = E.STUDENT_ID
DELETE FROM STUDENTS WHERE STUDENT_ID = 2
DELETE FROM ENROLLMENTS WHERE ENROLLMENT_ID=2

--7

UPDATE PAYMENTS
SET  AMOUNT = 3000
WHERE PAYMENT_ID = 117

---4 JOINS

---1
SELECT * FROM PAYMENTS
SELECT * FROM STUDENTS

SELECT S.FIRST_NAME, COUNT(P.PAYMENT_ID) AS TOTAL_PAY
FROM STUDENTS AS S
JOIN PAYMENTS AS P ON S.STUDENT_ID = P.STUDENT_ID
WHERE S.STUDENT_ID=1
GROUP BY S.STUDENT_ID,S.FIRST_NAME

--2

SELECT C.COURSE_ID,COUNT(E.STUDENT_ID) AS ENROLLED FROM COURSES AS C
JOIN ENROLLMENTS AS E
ON C.COURSE_ID = E.COURSE_ID
GROUP BY C.COURSE_ID

--3

SELECT S.FIRST_NAME,S.LAST_NAME,E.ENROLLMENT_ID FROM STUDENTS AS S
LEFT JOIN ENROLLMENTS AS E
ON S.STUDENT_ID = E.STUDENT_ID
WHERE ENROLLMENT_ID IS NULL

--4
SELECT S.FIRST_NAME,S.LAST_NAME,C.COURSE_NAME FROM STUDENTS AS S
JOIN ENROLLMENTS AS E
ON S.STUDENT_ID = E.STUDENT_ID
JOIN COURSES AS C 
ON E.COURSE_ID = C.COURSE_ID

--5

SELECT T.FIRST_NAME,T.LAST_NAME ,C.COURSE_ID FROM TEACHERS AS T
JOIN COURSES AS C
ON T.TEACHER_ID = C.TEACHER_ID
GROUP BY T.FIRST_NAME,T.LAST_NAME,C.COURSE_ID
ORDER BY 3 ASC

--6

SELECT S.STUDENT_ID,S.FIRST_NAME,S.LAST_NAME,C.COURSE_NAME , E.ENROLLMENT_DATE FROM STUDENTS AS S
JOIN ENROLLMENTS AS E 
ON S.STUDENT_ID = E.STUDENT_ID
JOIN COURSES AS C
ON E.COURSE_ID = C.COURSE_ID
ORDER BY S.STUDENT_ID 

--7
SELECT S.FIRST_NAME FROM STUDENTS AS S
LEFT JOIN PAYMENTS AS P
ON S.STUDENT_ID = P.STUDENT_ID
WHERE PAYMENT_ID IS NULL

--8
SELECT DISTINCT COURSE_NAME FROM COURSES AS C
LEFT JOIN ENROLLMENTS AS E
ON C.COURSE_ID = E.COURSE_ID
WHERE E.COURSE_ID IS NULL

--9
SELECT * FROM STUDENTS
SELECT * FROM COURSES
SELECT * FROM ENROLLMENTS

--10
SELECT T.TEACHER_ID,T.FIRST_NAME,T.LAST_NAME FROM TEACHERS AS T
LEFT JOIN COURSES AS C
ON T.TEACHER_ID = C.TEACHER_ID
WHERE C.TEACHER_ID IS NULL

---AGGREGATE 

--1

SELECT COURSE_ID, AVG(CNT) AS AVGCOUNT
FROM
(SELECT COURSE_ID, COUNT(ENROLLMENT_ID) AS CNT FROM ENROLLMENTS GROUP BY COURSE_ID)
AS AVERAGECOURSECOUNTS GROUP BY COURSE_ID;

---2

SELECT P.AMOUNT AS MAXAMOUNT,S.FIRST_NAME FROM STUDENTS AS S
JOIN PAYMENTS AS P
ON S.STUDENT_ID = P.STUDENT_ID
WHERE P.AMOUNT = (SELECT MAX(AMOUNT) FROM PAYMENTS);

--3 

SELECT C.COURSE_ID,C.COURSE_NAME,COUNT(*)  FROM COURSES AS C
JOIN ENROLLMENTS AS E
ON C.COURSE_ID = E.COURSE_ID
GROUP BY C.COURSE_ID,C.COURSE_NAME
HAVING COUNT(*) = 2

----4
SELECT T.TEACHER_ID,T.FIRST_NAME,T.LAST_NAME,SUM(P.AMOUNT) AS TOTALPAY
FROM TEACHERS AS T
JOIN COURSES C ON T.TEACHER_ID = C.TEACHER_ID
LEFT JOIN ENROLLMENTS E ON C.COURSE_ID = E.COURSE_ID
LEFT JOIN PAYMENTS P ON E.STUDENT_ID = P.STUDENT_ID
GROUP BY T.TEACHER_ID, T.FIRST_NAME, T.LAST_NAME;

---5

SELECT E.STUDENT_ID FROM ENROLLMENTS AS E
JOIN COURSES AS C ON E.COURSE_ID = C.COURSE_ID
GROUP BY E.STUDENT_ID
HAVING COUNT(E.COURSE_ID) IN (SELECT COUNT(COURSE_ID) FROM COURSES)
---6
SELECT * FROM COURSES
SELECT T.FIRST_NAME,T.LAST_NAME FROM TEACHERS AS T
WHERE NOT EXISTS( 
SELECT T.TEACHER_ID FROM COURSES)

---7 
SELECT AVG(DATEDIFF(YEAR, DOB, GETDATE())) AS AVG_AGE FROM STUDENTS

SELECT AVG(STUDENTAGE) AS AVERAGE_STUDENT_AGE
FROM (
SELECT DATEDIFF(YEAR, DOB, GETDATE()) AS STUDENTAGE
FROM STUDENTS
) AS STUDENTAGES;

---8

SELECT COURSE_ID FROM COURSES WHERE COURSE_ID NOT IN(SELECT COURSE_ID FROM ENROLLMENTS)

---9
SELECT S.FIRST_NAME,C.COURSE_NAME,SUM(P.AMOUNT) FROM STUDENTS AS S
JOIN ENROLLMENTS AS E
ON S.STUDENT_ID = E.STUDENT_ID 
JOIN COURSES AS C ON E.COURSE_ID = C.COURSE_ID
JOIN PAYMENTS AS P ON E.STUDENT_ID = P.STUDENT_ID
GROUP BY S.FIRST_NAME,C.COURSE_NAME
ORDER BY 1 DESC

--10

SELECT S.STUDENT_ID,S.FIRST_NAME,S.LAST_NAME FROM STUDENTS AS S
JOIN PAYMENTS AS P
ON S.STUDENT_ID = P.STUDENT_ID
GROUP BY S.STUDENT_ID,S.FIRST_NAME,S.LAST_NAME
HAVING COUNT(P.PAYMENT_ID) >1


 ---11

  SELECT S.STUDENT_ID,S.FIRST_NAME,S.LAST_NAME,SUM(AMOUNT) AS TOTAL_AMOUNT FROM STUDENTS AS S
  JOIN PAYMENTS AS P
  ON S.STUDENT_ID = P.STUDENT_ID
  GROUP BY S.STUDENT_ID,S.FIRST_NAME,S.LAST_NAME

  --12

  SELECT C.COURSE_ID ,C.COURSE_NAME,COUNT(E.STUDENT_ID) AS STUDENTS_ENROLLED FROM COURSES AS C
  LEFT JOIN ENROLLMENTS AS E
  ON C.COURSE_ID = E.COURSE_ID
  GROUP BY C.COURSE_ID,C.COURSE_NAME

  --13
  SELECT S.STUDENT_ID,S.FIRST_NAME ,S.LAST_NAME,AVG(P.AMOUNT) FROM STUDENTS AS S
  JOIN PAYMENTS AS P
  ON S.STUDENT_ID = P.STUDENT_ID
  GROUP BY S.STUDENT_ID,S.FIRST_NAME,S.LAST_NAME

